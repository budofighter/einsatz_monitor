; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "EinsatzHandler"
#define MyAppVersion "0.9.9.26"
#define MyAppPublisher "Christian Siebold"
#define MyAppURL "https://github.com/budofighter/einsatz_monitor"
#define MyAppExeName "EinsatzHandler.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D9B6CC1F-1D06-49BE-BE66-761110F44035}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
InfoBeforeFile=C:\Users\Public\PycharmProjects\einsatz_monitor\README.md
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=C:\Users\Public\PycharmProjects\einsatz_monitor\Installer
OutputBaseFilename=EinsatzHandlerSetup
SetupIconFile=C:\Users\Public\PycharmProjects\einsatz_monitor\resources\fwsignet.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "german"; MessagesFile: "compiler:Languages\German.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\Public\PycharmProjects\einsatz_monitor\dist\EinsatzHandler\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Public\PycharmProjects\einsatz_monitor\dist\EinsatzHandler\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\Public\PycharmProjects\einsatz_monitor\EinsatzHandler_venv\*"; DestDir: "{app}\EinsatzHandler_venv"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

; Erstellt einen Registry-Eintrag unter HKEY_LOCAL_MACHINE (HKLM) oder HKEY_CURRENT_USER (HKCU)
; Der Eintrag wird in den Pfad "Software\IhrUnternehmen\IhrProdukt" mit dem Schl�ssel "Version" und dem Wert "{#MyAppVersion}" gespeichert.
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}"; ValueType: string; ValueName: "Version"; ValueData: "{#MyAppVersion}"

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[Code]
const
  MyPascalAppVersion = '{#MyAppVersion}';  // Konstante im Pascal-Code
  MyPascalExeName = '{#MyAppExeName}';

var
  IsUpdate: Boolean;  // Globale Variable

function GetInstalledVersion(): String;
var
  Version: String;
begin
  if RegQueryStringValue(HKA, 'Software\Classes\Applications\' + MyPascalExeName, 'Version', Version) then
    Result := Version
  else
    Result := '';
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  NewVersion: String;
  InstalledVersion: String;
begin
  if CurStep = ssInstall then
  begin
    NewVersion := MyPascalAppVersion;
    InstalledVersion := GetInstalledVersion();

    // Prüfen, ob die Anwendung bereits installiert ist
    IsUpdate := FileExists(ExpandConstant('{app}\' + MyPascalExeName));

  if IsUpdate then
    begin
      // Prüfen, ob die neue Version tatsächlich neuer ist
      if NewVersion > InstalledVersion then
      begin
        if MsgBox('Es ist eine veraltete Version der Software vorhanden. Möchten Sie ein Update durchführen und die Benutzereinstellungen beibehalten?', mbConfirmation, MB_YESNO) = idYes then
          begin
          // Benutzerdefinierte Aktionen für ein Update
          end
        else
          begin
            WizardForm.Close;
          end;
      end
      else
      begin
        MsgBox('Sie haben bereits die neueste Version installiert. Daher wird das Installationsprogramm beendet.', mbInformation, MB_OK);
        // Hier könnten Sie die Installation abbrechen, wenn Sie möchten
        WizardForm.Close;
      end;
    end
    else
    begin
      // Benutzerdefinierte Aktionen für eine Neuinstallation
    end;
  end;
end;